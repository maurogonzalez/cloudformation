---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Amazon IAM Role"
Parameters:
  EKSServiceRoleName:
    Type: String
  EKSWorkerNodeName:
    Type: String
  S3BucketArn:
    Type: String
  S3Object:
      Type: String
Resources:
  EKSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
      - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
  EKSWorkerNodeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Policies:
      - PolicyName: S3SpleenPullpolicy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: "s3:GetObject"
            Resource: !Join
              - ''
              - - Fn::ImportValue: !Ref S3BucketArn
                - /
                - !Ref S3Object
Outputs:
  RoleArn:
    Description: The role that Amazon EKS will use to create AWS resources for Kubernetes clusters
    Value: !GetAtt EKSServiceRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-${EKSServiceRoleName}"
  EKSWorkerNodeARN:
    Description: The role that Amazon EKS Workers will use to access AWS resources
    Value: !GetAtt EKSWorkerNodeRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-${EKSWorkerNodeName}"